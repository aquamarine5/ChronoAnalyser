plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.kotlin.android)
    id 'com.google.devtools.ksp'
    id 'androidx.room'
    alias(libs.plugins.kotlin.compose)
    id "io.sentry.android.gradle" version "5.1.0"
    id "org.aquamarine5.brainspark.stackbricks-gradle-plugin" version "1.12"
}
room {
    schemaDirectory "$projectDir/schemas"
}
android {
    namespace 'org.aquamarine5.brainspark.chronoanalyser'
    compileSdk 35

    defaultConfig {
        applicationId "org.aquamarine5.brainspark.chronoanalyser"
        minSdk 26
        targetSdk 35
        versionCode 1000250216
        versionName "1.0.0-alpha5"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }
    signingConfigs {
        create("release"){
            storeFile file("..\\keystore.jks")
            storePassword System.getenv("keystorePassword")
            keyAlias "chronoanalyser"
            keyPassword System.getenv("keystorePassword")
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_21
        targetCompatibility JavaVersion.VERSION_21
    }
    kotlinOptions {
        jvmTarget = '21'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.5.1'
    }
    packaging {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

stackbricksConfig {
    host = "cdn.aquamarine5.fun"
    qiniuConfig {
        accessKey = project.findProperty("qiniu.accessKey") ?: ""
        secretKey = project.findProperty("qiniu.secretKey") ?: ""
        bucket = "aquabucket"
        referer = project.findProperty("qiniu.referer") ?: ""
        println "Qiniu config: $accessKey, $secretKey, $bucket, $referer"
    }
}

dependencies {
    def room_version = "2.6.1"
    implementation libs.okhttp
    implementation libs.okio
    implementation libs.stackbricks
    implementation libs.common
    implementation libs.uyumao
    implementation libs.asms
    implementation libs.androidx.core.ktx
    implementation libs.androidx.lifecycle.runtime.ktx
    implementation libs.androidx.activity.compose
    implementation libs.androidx.lifecycle.viewmodel.compose
    implementation platform(libs.androidx.compose.bom)
    implementation libs.androidx.ui
    implementation libs.androidx.ui.graphics
    implementation libs.androidx.ui.tooling.preview
    implementation libs.androidx.material3
    testImplementation libs.junit
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core
    androidTestImplementation platform(libs.androidx.compose.bom)
    androidTestImplementation libs.androidx.ui.test.junit4
    debugImplementation libs.androidx.ui.tooling
    debugImplementation libs.androidx.ui.test.manifest
    implementation(libs.androidx.room.runtime)
    ksp "androidx.room:room-compiler:$room_version"
}